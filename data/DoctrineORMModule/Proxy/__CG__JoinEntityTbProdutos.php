<?php

namespace DoctrineORMModule\Proxy\__CG__\Join\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class TbProdutos extends \Join\Entity\TbProdutos implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Join\\Entity\\TbProdutos' . "\0" . 'idProduto', '' . "\0" . 'Join\\Entity\\TbProdutos' . "\0" . 'nomeProduto', '' . "\0" . 'Join\\Entity\\TbProdutos' . "\0" . 'valorProduto', '' . "\0" . 'Join\\Entity\\TbProdutos' . "\0" . 'dataCriacao', '' . "\0" . 'Join\\Entity\\TbProdutos' . "\0" . 'idCategoriaProduto'];
        }

        return ['__isInitialized__', '' . "\0" . 'Join\\Entity\\TbProdutos' . "\0" . 'idProduto', '' . "\0" . 'Join\\Entity\\TbProdutos' . "\0" . 'nomeProduto', '' . "\0" . 'Join\\Entity\\TbProdutos' . "\0" . 'valorProduto', '' . "\0" . 'Join\\Entity\\TbProdutos' . "\0" . 'dataCriacao', '' . "\0" . 'Join\\Entity\\TbProdutos' . "\0" . 'idCategoriaProduto'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (TbProdutos $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', []);

        return parent::toArray();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdProduto(): int
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getIdProduto();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdProduto', []);

        return parent::getIdProduto();
    }

    /**
     * {@inheritDoc}
     */
    public function getNomeProduto(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomeProduto', []);

        return parent::getNomeProduto();
    }

    /**
     * {@inheritDoc}
     */
    public function getValorProduto(): float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValorProduto', []);

        return parent::getValorProduto();
    }

    /**
     * {@inheritDoc}
     */
    public function getDataCriacao(): ?\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDataCriacao', []);

        return parent::getDataCriacao();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdCategoriaProduto(): \Join\Entity\TbCategoriasProdutos
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdCategoriaProduto', []);

        return parent::getIdCategoriaProduto();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdProduto(int $idProduto)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdProduto', [$idProduto]);

        return parent::setIdProduto($idProduto);
    }

    /**
     * {@inheritDoc}
     */
    public function setNomeProduto(string $nomeProduto)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomeProduto', [$nomeProduto]);

        return parent::setNomeProduto($nomeProduto);
    }

    /**
     * {@inheritDoc}
     */
    public function setValorProduto(float $valorProduto)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValorProduto', [$valorProduto]);

        return parent::setValorProduto($valorProduto);
    }

    /**
     * {@inheritDoc}
     */
    public function setDataCriacao(?\DateTime $dataCriacao)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDataCriacao', [$dataCriacao]);

        return parent::setDataCriacao($dataCriacao);
    }

    /**
     * {@inheritDoc}
     */
    public function setIdCategoriaProduto(\Join\Entity\TbCategoriasProdutos $idCategoriaProduto)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdCategoriaProduto', [$idCategoriaProduto]);

        return parent::setIdCategoriaProduto($idCategoriaProduto);
    }

}
